@model IEnumerable<HRSystem.Models.Employee>
@{
    ViewBag.Title = Resources.NubiHR.AllEmployees;
    var IsArabic = Request.Cookies["culture"].Value == "ar" ? true : false;
}

@section Styles{
    <link href="~/Scripts/select2-4.0.5/css/select2.css" rel="stylesheet" />
}

<br />

@*@using (@Html.BeginForm("Search", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{*@
<div class="form-inline">
    <div class="form-group">
        @Html.Label(Resources.NubiHR.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdDepartment", new SelectList(@ViewBag.Departments, "Id", (IsArabic == true ? "DepartmentNameAr" : "DepartmentNameEn")), Resources.NubiHR.Select, new { @class = "form-control select2" })
           @* @Html.ValidationMessage("IdDepartment", "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Resources.NubiHR.Salary + " " + Resources.NubiHR.From, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("SalaryMin", new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessage("SalaryMin", "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label(Resources.NubiHR.To, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("SalaryMax", new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessage("max", "", new { @class = "text-danger" })*@
        </div>
    </div>
</div>
@*}*@




<br /><br />
@*<tr> <td>@Resources.NubiHR.Salary @Resources.NubiHR.From</td> <td><input id="min" name="min" type="text"></td> </tr>
<tr> <td>@Resources.NubiHR.To</td> <td><input id="max" name="max" type="text"></td> </tr>*@
<div class="row">
    <div class="col-md-12">

        <div class="panel panel-primary list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <h2 class="">@Resources.NubiHR.AllEmployees</h2>
            </div>
            <div class="panel-body">
                <table id="assets-data-table" class="table table-striped table-bordered ReportPage table-responsive" style="width:100%">

                    <thead>
                        <tr>
                            <th>@Resources.NubiHR.FunctionalNumber</th>
                            <th>@Resources.NubiHR.EmployeeName</th>
                            <th>@Resources.NubiHR.StartDate</th>
                            <th>@Resources.NubiHR.Department</th>
                            <th>@Resources.NubiHR.Position</th>
                            <th>@Resources.NubiHR.AspEmail</th>
                            <th>@Resources.NubiHR.PersonalEmail</th>
                            <th>@Resources.NubiHR.Address</th>
                            <th>@Resources.NubiHR.Mobile</th>
                            
                            <th>@Resources.NubiHR.Salary</th>

                        </tr>
                    </thead>




                    <tbody>

                        @foreach (var item in Model.Where(y => y.IsDeleted == false))
                        {
                            <tr>
                                <td>
                                    @item.FunctionalNumber
                                </td>

                                <td>
                                    @item.FirstName @item.LastName
                                </td>

                                
                                <td>
                                    @item.StartDate
                                </td>

                                @if (IsArabic)
                                {
                                    <td>
                                        @item.Department.DepartmentNameAr
                                    </td>

                                    <td>
                                        @item.Position.PositionNameAr
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @item.Department.DepartmentNameEn
                                    </td>

                                    <td>
                                        @item.Position.PositionNameEn
                                    </td>
                                }

                                
                                <td>
                                    @item.AspNetUsers.Select(x => x.Email).FirstOrDefault()
                                </td>

                                <td>
                                    @item.Email
                                </td>


                                <td>
                                    @item.Address
                                </td>


                                <td>
                                    @item.Mobile1
                                </td>


                                <td>
                                    @item.Salary.BasicSalary
                                </td>
                               
                            </tr>
                        }
                    </tbody>

                </table>
           
                </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/select2-4.0.5/js/select2.full.js"></script>
}

<script type="text/javascript">


    /* Custom filtering function which will search data in column four between two values */
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var min = parseInt($('#SalaryMin').val(), 10);
            var max = parseInt($('#SalaryMax').val(), 10); 
            var salary = parseFloat(data[9]) || 0; // use data for the salary column
            

            if ((isNaN(min) && isNaN(max)) ||
                (isNaN(min) && salary <= max) ||
                (min <= salary && isNaN(max)) ||
                (min <= salary && salary <= max)) {
                return true;
            }
            return false;
        }
    );

    
    $(document).ready(function () {

        $('.select2').select2();
        $('#IdDepartment').on('change', function () {

            var GetElement = document.getElementById("IdDepartment");
            var ValueOfCurrentSelectedItem = GetElement.options[GetElement.selectedIndex].value;
            if (ValueOfCurrentSelectedItem != "") {
               
                var SelectedText = GetElement.options[ValueOfCurrentSelectedItem].textContent;
                $('#assets-data-table').DataTable()
                    .columns(3)
                    .search(SelectedText)
                    .draw();
            }
            else {

                $('#assets-data-table').DataTable().columns(3).search("").draw();
                
            }
            

        });
        // Event listener to the two range filtering inputs to redraw on input
        $('#SalaryMin, #SalaryMax').keyup(function () {
            var table = $('#assets-data-table').DataTable();
            table.draw();
        });
    });




</script>
