@model HRSystem.Models.VMAddEmployee

@{
    ViewBag.Title = Resources.NubiHR.EditEmployee;
    var count = 1;
    var IsArabic = Request.Cookies["culture"].Value == "ar" ? true : false;
    var count1 = 1;
}


<h2> @Resources.NubiHR.EditEmployee</h2>


@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (Model == null)
    {
        <legend style="color: #eea904;">@Resources.NubiHR.Error</legend>
    }
    else
    {
        <div class="form-horizontal">
            <h4>@ViewBag.EmployeeName</h4>

            <div>
                @Html.ActionLink(Resources.NubiHR.BackTolist, "Index")
            </div>
            <br />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.IdEmployee)
            <input name="countSib" id='countSib' type="hidden" value="1" />
            <input name="countAtt" id='countAtt' type="hidden" value="1" />
            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">
                        <legend class="the-legend">@Resources.NubiHR.EmployeeInfo</legend>


                        @* @Html.LabelFor("UserNo", htmlAttributes: new { @class = "control-label col-md-2" })*@

                        @Html.HiddenFor(model => Model.IdEmployee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => Model.IdEmployee, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => Model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => Model.FirstName, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => Model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => Model.LastName, "", new { @class = "text-danger" })


                        @*
                            @Html.LabelFor(model => Model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => Model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => Model.UserName, "", new { @class = "text-danger" })
                        *@



                        @Html.LabelFor(model => Model.EmailEmployee, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.EmailEmployee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => Model.EmailEmployee, "", new { @class = "text-danger" })



                        @Html.LabelFor(model => Model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.Address, "", new { @class = "text-danger" })



                        @Html.LabelFor(model => Model.FunctionalNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.FunctionalNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => Model.FunctionalNumber, "", new { @class = "text-danger" })

                    </fieldset>

                </div>
            </div>
            <input name="countSib" id='countSibModel' type="hidden" value= @Model.EmergencyContactList.Count() />
            @if (Model.EmergencyContactList.Count() > 0)
            {
            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">
                        
                            <legend class="the-legend">@Resources.NubiHR.EmergencyContact</legend>
                            @foreach (var item1 in Model.EmergencyContactList)
                            {
                                Model.NameOfSibling = item1.Name;
                                @Html.LabelFor(model => model.NameOfSibling, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(Model => Model.NameOfSibling, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                                Model.MobileEmergencyContact = item1.Mobile;
                                @Html.LabelFor(Model => Model.MobileEmergencyContact, htmlAttributes: new { @class = "control-label" })
                                @*@Html.EditorFor(Model => Model.MobileEmergencyContact, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input name="@count1 MobileEmergencyContact" value="@Model.MobileEmergencyContact" class="form-control"/>


                                @Html.LabelFor(Model => Model.IdRelationshipType, htmlAttributes: new { @class = "control-label" })
                                Model.IdRelationshipType = item1.RelationshipTypeNo;
                                @Html.HiddenFor(Model => Model.IdRelationshipType, htmlAttributes: new { @class = "control-label" })
                                if (item1.RelationshipTypeNo == 7)
                                {
                                    Model.Other = item1.Type;
                                    @Html.EditorFor(Model => Model.Other, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                                }
                                else
                                {
                                   
                                    if (IsArabic)
                                    {
                                        Model.RelationAr = item1.RelationshipType.RelationAr;
                                        @Html.EditorFor(Model => Model.RelationAr, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                                    }
                                    else
                                    {
                                        Model.RelationEn = item1.RelationshipType.RelationEn;
                                        @Html.EditorFor(Model => Model.RelationEn, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                                    }

                                }
                               <br/><br />

                                count1++;
                            }
                        

                    </fieldset>
                </div>
            </div>
            }

            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">
                        <legend class="the-legend">@Resources.NubiHR.Add @Resources.NubiHR.EmergencyContact</legend>

                        @Html.LabelFor(model => Model.IdRelationshipType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.IdRelationshipType, new SelectList(@ViewBag.RelationshipType, "Id", (IsArabic == true ? "RelationAr" : "RelationEn")), Resources.NubiHR.Select, new { @class = "form-control", @style = "margin-bottom: 23px; " })
                      

                        <input id='addButton1' type="button" value="@Resources.NubiHR.AddSiblings" class="btn btn-outline-success" />
                        <input id='removeButton1' type="button" value="@Resources.NubiHR.RemoveSiblings" class="btn btn-outline-danger" />
                        <div class="">
                            <label class="control-label" style="padding-top: 12px;">@Resources.NubiHR.Note</label>
                        </div>

                        @Html.Hidden("MySiblingsHidden")
                        <div id="MySibglingsList">

                        </div>
                        <div id="MainDiv1"></div>


                    </fieldset>

                </div>
            </div>

            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">
                        <legend class="the-legend">@Resources.NubiHR.PhoneInfo</legend>

                        @Html.LabelFor(model => Model.Mobile1, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => Model.Mobile1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.Mobile1, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => Model.Mobile2, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => Model.Mobile2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.Mobile2, "", new { @class = "text-danger" })

                    </fieldset>



                </div>
            </div>


            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">

                        <legend class="the-legend">@Resources.NubiHR.JobInfo</legend>


                        @Html.LabelFor(model => Model.StartDate, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => Model.StartDate, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => Model.StartDate, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => model.IdDepartment, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.IdDepartment, new SelectList(@ViewBag.Department, "Id", (IsArabic == true ? "DepartmentNameAr" : "DepartmentNameEn")), Resources.NubiHR.Select, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdDepartment, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => model.IdPosition, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.IdPosition, new SelectList(ViewBag.Position, "Id", (IsArabic == true ? "PositionNameAr" : "PositionNameEn")), Resources.NubiHR.Select, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdPosition, "", new { @class = "text-danger" })


                    </fieldset>

                </div>
            </div>



            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">

                        <legend class="the-legend">@Resources.NubiHR.BankInfo</legend>


                        @Html.LabelFor(model => Model.AccountNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.AccountNumber, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => Model.BankName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.BankName, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => Model.BankBranch, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.BankBranch, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.BankBranch, "", new { @class = "text-danger" })

                    </fieldset>

                </div>
            </div>


            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">

                        <legend class="the-legend">@Resources.NubiHR.SalaryInfo</legend>


                        @Html.LabelFor(model => Model.BasicSalary, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => Model.BasicSalary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.BasicSalary, "", new { @class = "text-danger" })

                        @*
                            @Html.LabelFor("Bonus", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => Model.Bonus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.Bonus, "", new { @class = "text-danger" })
                        *@


                    </fieldset>

                </div>
            </div>




            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary list-panel" id="list-panel">
                        @*<div class="panel-heading list-panel-heading">*@


                        <input name="countAttTable" id='count' type="hidden" value= @count />
                        <div class="col-md-8">
                            <div class="form-group">
                                <fieldset class="">
                                    <legend class="" style="color: #eea904;">@Resources.NubiHR.Attachments</legend>
                                    <div class="panel-body">
                                        <table id="assets-data-table" class="table table-striped table-bordered" style="width:100%">


                                            <tbody>
                                                @if (Model.AttachmentList.Count == 0)
                                                {
                                                    <tr>@Resources.NubiHR.NoRecordsFound</tr>
                                                }
                                                else if (Model.AttachmentList != null)
                                                {
                                                    <tr>
                                                        @*<th> @Resources.NubiHR.TrainingCertificate @count</th>*@
                                                        <th> @Resources.NubiHR.Name</th>
                                                        <th>@Resources.NubiHR.AttachmentType</th>
                                                        <th>@Resources.NubiHR.ExpirationDate</th>
                                                        <th>@Resources.NubiHR.IsExpired</th>
                                                        <th>@Resources.NubiHR.Notes</th>
                                                    </tr>
                                                    foreach (var item in Model.AttachmentList)
                                                    {

                                                        <tr>
                                                            <td>

                                                                <a href="~/Attachments/@item.Name">
                                                                    @*<a href="~/Attachments/@Model.TrainingCertificateUrl">*@
                                                                    <i class="glyphicon glyphicon-file"></i>
                                                                </a>
                                                                @item.Name
                                                                @Html.Hidden("Path" + count, item.Path, new { id = "HiddenPath" + count })
                                                                @*@Html.TextBox("TrainingCertificateFile" + count, null, new { type = "file", id = "file4" + count, onchange = "return fileValidation('file4" + count + "', 'TCHiddenFile" + count + "')", htmlAttributes = new { @class = "form-control" } })
                                                                    @Html.Editor("TrainingCertificateName" + count, new { htmlAttributes = new { @class = "form-control" } })*@


                                                            </td>

                                                            @if (IsArabic)
                                                            {
                                                                <td>@item.TypesOfAttachment.AttachmentTypeAr</td>
                                                            }
                                                            else
                                                            {
                                                                <td>@item.TypesOfAttachment.AttachmentTypeEn</td>
                                                            }

                                                            <td>@item.ExpirationDate</td>
                                                            @if (@item.TypesOfAttachment.Id == 1 || @item.TypesOfAttachment.Id == 2)
                                                            {
                                                                if (DateTime.Now.Date >= item.ExpirationDate)
                                                                {
                                                                    if (item.IsExpired == true)
                                                                    {
                                                                        <td><input type="checkbox" id="IsExpired @count" name="IsExpired @count" value=@item.IsExpired checked disabled /></td>
                                                                        <td>@Resources.NubiHR.DateIsExpired</td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><input type="checkbox" id="IsExpired @count" name="IsExpired @count" /></td>
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    <td>@Resources.NubiHR.NotYet</td>
                                                                    <td> </td>
                                                                }

                                                            }
                                                            else
                                                            {

                                                            }
                                                             @*@if (DateTime.Now.Date >= item.ExpirationDate)
                                                             {

                                                                <td>@Resources.NubiHR.DateIsExpired</td>
                                                            }*@

                                                        </tr>


                                                        count++;
                                                    }

                                                }


                                            </tbody>
                                        </table>
                                    </div>
                                </fieldset>

                            </div>
                        </div>

                        @*</div>*@

                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="form-group">
                    <fieldset class="the-fieldset">

                        <legend class="the-legend">@Resources.NubiHR.AddAttachment</legend>

                        @Html.LabelFor(model => Model.AttachmentType, htmlAttributes: new { @class = "control-label" })

                        @Html.DropDownListFor(model => model.AttachmentType, new SelectList(@ViewBag.AttachmentType, "Id", (IsArabic == true ? "AttachmentTypeAr" : "AttachmentTypeEn")), Resources.NubiHR.Select, new { @class = "form-control", @style = "margin-bottom: 23px; " })
                        @Html.ValidationMessageFor(model => Model.AttachmentType, "", new { @class = "text-danger" })


                        <input id='addButton' type="button" value="@Resources.NubiHR.AddAttachment" class="btn btn-outline-success" />
                        <input id='removeButton' type="button" value="@Resources.NubiHR.RemoveAttachment" class="btn btn-outline-danger" />

                        <div class="">
                            <label class="control-label" style="padding-top: 12px;">@Resources.NubiHR.Note</label>
                        </div>
                        @Html.Hidden("MyAttachmentHidden")


                        <div id="MainDiv"></div>

                    </fieldset>

                </div>
            </div>


            <div class="form-group">
                <div class="col-md-8">
                    <input type="submit" value="@Resources.NubiHR.Update" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

}




                @if (ViewBag.MessageException != null)
                {
                    <script type="text/javascript">
            window.onload = function () {
      swal(`@Resources.NubiHR.Warning`,`@ViewBag.MessageException`,`error`);
                                           };
                    </script>


                }


                @if (ViewBag.Message != null)
                {
                    <script type="text/javascript">
            window.onload = function () {
             //alert("@ViewBag.Message");
             swal(`@Resources.NubiHR.Successfull`,`@ViewBag.Message`,`success`);
            };
                    </script>
                }

                <script type="text/javascript">

    var strMyAttachment = "";

    $(document).ready(function () {

        var counter = 1;

        $("#addButton").click(function () {
            var value = $("#AttachmentType").val();
            var text = $("#AttachmentType option:selected").text();


            if (value == "" && counter > 5) {
                swal(`Ops!`, `You've selected all types of attachment !`, `info`)
                return false;

            }
            else if (value == "") {
                swal(`@Resources.NubiHR.Error`, `Please select type of attachment !`, `error`)
                return false;

            }
            else if (value == 1 || value == 2) {
                    $("#MainDiv").append(
                    ' <br />' +
                    '<input id="ValueOfAttachment' + counter + '" name="ValueOfAttachment' + counter + '" type="hidden" value="' + value + '">' +
                    '<div id="BigDiv' + counter + '">' +
                    ' <div class="form-group">' +
                    '<label id="name' + value + ' " name="name' + value + '" class="control-label col-md-8" >' + text + '</label>' +
                    '<div class="col-md-10">' +
                    '<input id="' + counter + '" name="UploadFile' + counter + '" type="file"  onchange = "return fileValidation(' + counter + ')" />' +
                    '</div>' +
                    '</div>' +
                    '<div class="form-group">' +
                    '<label id="ExpirationDate' + value + '" name="ExpirationDate' + value + '" class="control-label col-md-8">@Resources.NubiHR.ExpirationDate ' + "" + '</label>' +
                    '<div class="col-md-10">' +
                    '<input type="date" id="InputText' + counter + '" name="InputText' + counter + '" type="text" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                    '</div>'
                );


                $("#AttachmentType option[value='" + value + "']").remove();
                strMyAttachment = strMyAttachment.concat(value + " ");
                console.log(strMyAttachment);
                $("#MyAttachmentHidden").val(strMyAttachment);

                counter++;
                $('#countAtt').val(counter);
                var button = $("<input />").attr("type", "hidden").attr("value", "1").attr("name", "count");
                button.val(value);


            }
            else {
                $("#MainDiv").append(
                    ' <br />' +
                    '<input id="ValueOfAttachment' + counter + '" name="ValueOfAttachment' + counter + '" type="hidden" value="' + value + '">' +
                    '<div id="BigDiv' + counter + '">' +
                    ' <div class="form-group">' +
                    '<label id="name' + value + ' " name="name' + value + '" class="control-label col-md-8" >' + text + '</label>' +
                    '<div class="col-md-10">' +
                    '<input id="' + counter + '" name="UploadFile' + counter + '" type="file"  onchange = "return fileValidation(' + counter + ')" />' +
                    '</div>' +
                    '</div>' +
                    '</div>'
                );


                $("#AttachmentType option[value='" + value + "']").remove();
                strMyAttachment = strMyAttachment.concat(value + " ");
                console.log(strMyAttachment);
                $("#MyAttachmentHidden").val(strMyAttachment);

                counter++;
                $('#countAtt').val(counter);
                var button = $("<input />").attr("type", "hidden").attr("value", "1").attr("name", "count");
                button.val(value);

            }

        });

        $("#removeButton").click(function () {
            if (counter == 1) {
                swal(`@Resources.NubiHR.Warning`, `No attachment was found to remove`, `info`);
                return false;
            }
            else {
                counter--;
                $('#countAtt').val(counter);

                $("#BigDiv" + counter).remove();
                //strMyAttachment = strMyAttachment.replace(n +" ", "");
                //console.log(strMyAttachment);
                //$("#MyAttachmentHidden").val(strMyAttachment);

            }

        });

        $("#getButtonValue").click(function () {

            var msg = '';
            for (i = 1; i < counter; i++) {
                msg += "\n Training Certificate# " + i + " : " + $('#TrainingCertificate' + i).val();
            }
            swal(``, msg, `info`);
        });

    });
    ///////////////////
      $(document).ready(function () {

          var counter = 1;
          var strMySibling = "";

        $("#addButton1").click(function () {
            var value = $("#IdRelationshipType").val();
            var text = $("#IdRelationshipType option:selected").text();


            $("<span id='" + text + "' >" + text + "</span>").hide().appendTo("#MySibglingsList");

            if (value == "" && counter > 7) {
                swal(`Ops!`, `You've selected all types of relations !`, `info`)
                return false;

            }
            else if (value == "") {
                swal(`@Resources.NubiHR.Error`, `Please select type of relationship !`, `error`)
                return false;

            }
            else if (value == 7) {

                $("#MainDiv1").append(
                    '<legend style="color: #eea904;" id='  + text +  ' >' + text + '</legend>' +
                    '<input id="ValueOfSibling' + counter + '" name="ValueOfSibling' + counter + '" type="hidden" value="' + value + '">' +
                    '<div id="BigDiv1' + counter + '">' +
                    '<div class="form-group">' +
                    '<label id="Sibling' + value + '" name="Sibling' + value + '" class="control-label col-md-8">@Resources.NubiHR.Name ' + "" + '</label>' +
                    '<div class="col-md-8">' +
                    '<input type="text" id="NameOfSiblingg' + counter + '" name="NameOfSiblingg' + counter + '" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                     '<div class="form-group">' +
                    '<label id="NoOfSibling' + value + '" name="NoOfSibling' + value + '" class="control-label col-md-8">@Resources.NubiHR.Mobile ' + "" + '</label>' +
                    '<div class="col-md-8">' +
                    '<input type="text" id="MobileEmergencyContactt' + counter + '" name="MobileEmergencyContactt' + counter + '" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                    '<div class="form-group">' +
                    '<label id="Other' + value + '" name="Other' + value + '" class="control-label col-md-8">@Resources.NubiHR.RelationshipType ' + "" + '</label>' +
                    '<div class="col-md-8">' +
                    '<input type="text" id="Other' + counter + '" name="Other' + counter + '" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                    '</div>'
                );

                $("#IdRelationshipType option[value='" + value + "']").remove();
                strMySibling = strMySibling.concat(value + " ");
                console.log(strMySibling);
                $("#MySiblingHidden").val(strMySibling);

                counter++;
                $('#countSib').val(counter);
                var button = $("<input />").attr("type", "hidden").attr("value", "1").attr("name", "count");
                button.val(value);

            }
             else {

                $("#MainDiv1").append(
                    '<legend style="color: #eea904;" id='  + text +  ' >' + text + '</legend>' +
                    '<input id="ValueOfSibling' + counter + '" name="ValueOfSibling' + counter + '" type="hidden" value="' + value + '">' +
                    '<div id="BigDiv1' + counter + '">' +
                    '<div class="form-group">' +
                    '<label id="Sibling' + value + '" name="Sibling' + value + '" class="control-label col-md-8">@Resources.NubiHR.Name ' + "" + '</label>' +
                    '<div class="col-md-8">' +
                    '<input type="text" id="NameOfSiblingg' + counter + '" name="NameOfSiblingg' + counter + '" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                     '<div class="form-group">' +
                    '<label id="NoOfSibling' + value + '" name="NoOfSibling' + value + '" class="control-label col-md-8">@Resources.NubiHR.Mobile ' + "" + '</label>' +
                    '<div class="col-md-8">' +
                    '<input type="text" id="MobileEmergencyContactt' + counter + '" name="MobileEmergencyContactt' + counter + '" class="form-control" />' +
                    '</div>' +
                    '</div>' +
                    '</div>'
                );

                $("#IdRelationshipType option[value='" + value + "']").remove();
                strMySibling = strMySibling.concat(value + " ");
                console.log(strMySibling);
                $("#MySiblingsHidden").val(strMySibling);

                counter++;
                $('#countSib').val(counter);
                var button = $("<input />").attr("type", "hidden").attr("value", "1").attr("name", "count");
                button.val(value);

            }

        });

        $("#removeButton1").click(function () {
            if (counter == 1) {
                swal(`@Resources.NubiHR.Warning`, `No sibling was found to remove`, `info`);
                return false;
            }
            else {
                counter--;
                $('#countSib').val(counter);

                $("#BigDiv1" + counter).remove();


                var element = document.getElementById('MySibglingsList');
                var Lastchild = element.lastChild;
                var n = Lastchild.textContent;
                var id = "";


                if (n == "Father") {

                    id = 1;

                }
                else if (n == "Mother") {
                    id = 2;

                }
                else if (n == "Brother") {
                    id = 3;

                }
                else if (n == "Sister") {
                    id = 4;

                }
                else if (n == "Husband") {
                    id = 5;

                }
                else if (n == "Wife") {
                    id = 6;

                }
                else if (n == "Other") {
                    id = 7;

                }

                strMySibling = strMySibling.replace(n + " ", "");
                console.log(strMySibling);
                $("#MySiblingsHidden").val(strMySibling);
                $(" <option value=" + id + ">" + n + "</option>").appendTo("#IdRelationshipType");
                $('legend[id^="' + n + '"]').remove();
                $('span[id^="' + n + '"]').remove();

            }

        });

    });
@*</script>

<script type="text/javascript">*@

     $("#AddAttachment").click(function () {

         var value = $("#AttachmentType").val();

         if (value != "") {
             var text = $("#AttachmentType option:selected").text();
             $("#AttachmentType option[value='" + value + "']").remove();
             strMyAttachment = strMyAttachment.concat(value + " ");
             console.log(strMyAttachment);
             $("#MyAttachmentHidden").val(strMyAttachment);

           //  $("<span id=' " + text + " ' ></span> " + text + " </span>").hide().appendTo("#MyAttachmentList").fadeIn();


             $("<span id=' " + text + " ' >" + text + "</span>").hide().appendTo("#MyAttachmentList").fadeIn();
             $("#MyAttachmentList").append("<br />");
             var x = document.getElementById(value);
             x.style.display = "block";

            // x.removeAttribute("hidden");
         }

     });


     $("#RemoveAttachment").click(function () {

         try {
             $('br').remove();
             var element = document.getElementById('MyAttachmentList');
             var Lastchild = element.lastChild;
             //var w = element.innerHTML;
             var n = Lastchild.textContent;
             var id = "";
             var file = "";


             if (n == "National ID") {

                 id = 1;
                 file = "file";
             }
             else if (n == "Passport Number") {
                 id = 2;
                 file = "file1";
             }
             else if (n == "Last Certificate") {
                 id = 3;
                 file = "file2";
             }
             else if (n == "Image") {
                 id = 4;
                 file = "file3";
             }
             else if (n == "Training Certificate") {
                 id = 5;
                 file = "file4";
             }

             var el = document.getElementById(id);
             $(Lastchild).remove();
             $("\n").remove();

             $('span[id^="' + n + '"]').remove();


             //$(" ").remove();
             strMyAttachment = strMyAttachment.replace(n + " ", "");
             console.log(strMyAttachment);
             $("#MyAttachmentHidden").val(strMyAttachment);
             $(" <option value=" + id + ">" + n + "</option>").appendTo("#AttachmentType");
             // el.parentNode.removeChild(el);
             el.style.display = "none";
             document.getElementById(file).value = "";


         }
         catch (err) {
             alert(err);

         }

     });

     //function validateForm() {
     //    var langArabic = lang === 'ar';
     //    var x = $("#MyAttachmentHidden").val();
     //    var AttachmentType = $("#AttachmentType").val()
     //    if (x == "" && AttachmentType != 'RUser' && (AttachmentType == 'Member' || AttachmentType == 'JUser' || AttachmentType != 'sysadmin')) {
     //        swal(`Error`, (langArabic ? "الرجاء اختيار نوع المرفق بالضغط على زر اضافة مرفق" : "Please choose attachment type by clicking on Add attachment"),`error`);
     //        return false;
     //    }
     //}


                </script>


                <div>
                    @Html.ActionLink(Resources.NubiHR.BackTolist, "Index")
                </div>

                @*<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>*@


                @* retreive positon depends on department *@

                <script type="text/javascript">



    $(document).ready(function () {

        $("#IdDepartment").on('change',function () {
            $("#IdPosition").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetPosition")',
                dataType: 'json',
                data: { IdDepartment: $("#IdDepartment").val() },
                success: function (IdPosition) {

                    $.each(IdPosition, function (i, IdPosition) {
                        $("#IdPosition").append('<option value="'
                            + IdPosition.Value + '">'
                            + IdPosition.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })
    });




                </script>


                @*  validation for upload files *@

                <script>
    function fileValidation(element1, element2) {
        var fileInput = document.getElementById(element1);
        var HiddenFile = document.getElementById(element2);
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jfif|\.jpg|\.jpeg|\.png|\.gif|\.pdf|\.doc|\.docx)$/i;
        if (!allowedExtensions.exec(filePath)) {
            // alert('Please upload file having extensions .jpeg/.jpg/.png/.gif/ .doc/ .docx/ .pdf only.');
            swal(`@Resources.NubiHR.Error`, '@Resources.NubiHR.UploadAllowedExtensions', `error`);
            fileInput.value = '';
            return false;
        } else {
            //Image preview
            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('imagePreview').innerHTML = '<img src="' + e.target.result + '"/>';
                };
                reader.readAsDataURL(fileInput.files[0]);

                $(HiddenFile).val(fileInput.value.split(/(\\|\/)/g).pop());


            }
        }
    }

                </script>

