@model HRSystem.Models.VacationRequest
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Create";
    HRSystem.Manager.Helper helperx = new HRSystem.Manager.Helper();
    HRSystem.Manager.RequestManager mngr = new HRSystem.Manager.RequestManager();
}

<h2>Create</h2>
@using (Html.BeginForm(null, null, FormMethod.Post))
{
   
    <div class="form-group col-md-6">
        <div>
            @Resources.NubiHR.EmployeeName
        </div>
        <div>
            <label> @helperx.GetName(User.Identity.GetUserId()).Employee.FirstName</label>
        </div>
        <br />
        <div>
            @Resources.NubiHR.Position
        </div>
        <div>
            <label> @helperx.GetUserRole(User.Identity.GetUserId())</label>
        </div>
        <br />
        @*<div>
            @Resources.NubiHR.RequestDate
        </div>
        <div>
            @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
        </div>
        <br />*@
        
        <div>
            @Resources.NubiHR.VacationType
        </div>
        <div>
            @Html.Hidden("VacationTypeNo")
            @*<select id="VacationTypeNo" class="form-control">
                <option value="">Select</option>
                <option value="1">Normal Leave</option>
                <option value="2">Sick leave</option>
                <option value="3">Accidental leave</option>
                <option value="4">Other</option>
            </select>*@
                        @Html.DropDownList("VacationTypeNoMain", new List<SelectListItem>
        {
           new SelectListItem{ Text="select", Value = "" },
           new SelectListItem{ Text="Normal Leave", Value = "1" },
           new SelectListItem{ Text="Sick leave", Value = "2" },
           new SelectListItem{ Text="Accidental leave", Value = "3" },
           new SelectListItem{ Text="Other", Value = "4" },
        }, new { @class = "form-control" })
            @*@Html.DropDownList("VacationTypeNo", null, "Select", new { @class = "form-control" })*@
        </div>
        <br />
        <div id="Other">
            @*@Html.DropDownList("VacationTypeNo", null, "Select", new { @class = "form-control" })*@

            @Html.DropDownList("VacationTypeNoOther", new List<SelectListItem>{
   new SelectListItem{ Text="Father's Death", Value = "5" },
   new SelectListItem{ Text="Mother's Death", Value = "6" },
} , new { @class = "form-control" })

        </div>
        
        <br />
        <div id="MedicalReport">
            <div>
                @Resources.NubiHR.MedicalReport
            </div>
            <div>
                @Html.TextBoxFor(model => model.MedicalReport, new { type = "file", id = "file4", onchange = "return fileValidation('file4')", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicalReport, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        @*<input id="datepicker" width="270" />*@
        @*<div class="dates">
            <div class="start_date input-group mb-4">
                <input class="form-control start_date" type="text" placeholder="start date" >
                <div class="input-group-append">
                    <span class="fa fa-calendar input-group-text start_date_calendar" aria-hidden="true"></span>
                </div>
            </div>
            
        </div>*@
        <div>
            Please Accept My Vacation Described Above For a Period Of
            @*ارجو الموافقة على منحي الاجازة الموضحة أعلاه لمدة*@ 
        </div>
        <div>
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control"  } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
        <br />
        <div>
            @Resources.NubiHR.From
        </div>
        <div class="start_date input-group mb-4">
            @Html.EditorFor(model => Model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-append">
                <span class="fa fa-calendar input-group-text start_date_calendar" aria-hidden="true"></span>
            </div>
            <br />
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
        <br />
        <div>
            @Resources.NubiHR.To
        </div>
        <div class="start_date input-group mb-4">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-append">
                <span class="fa fa-calendar input-group-text end_date_calendar" aria-hidden="true"></span>
            </div>
            <br />
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
        <br />
        <div>
            @Resources.NubiHR.ResumeDate
        </div>
        <div class="start_date input-group mb-4">
            @Html.EditorFor(model => model.ResumeDate, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-append">
                <span class="fa fa-calendar input-group-text resume_date_calendar" aria-hidden="true"></span>
            </div>
            <br />
            @Html.ValidationMessageFor(model => model.ResumeDate, "", new { @class = "text-danger" })
        </div>
        <br />
        <div>
            My Address During Vacation
        </div>
        <div>
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <br />
        <div>
        وسيكون البديل الموظف
    </div>
    <div>
        @Html.DropDownList("EmpNo", null, "Select", new { @class = "form-control" })
    </div>
            <br/>
        <div>
            @Resources.NubiHR.Note
        </div>
        <div>
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <br />
        <div class="form-group">
            <div>
                <input type="submit" value="Send" class="btn2" />
                
                <button class="btn-Back"><a href="@Url.Action("VacationRequest","Index")" >@Resources.NubiHR.Back</a></button>
            </div>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function ()
    {
        $("#MedicalReport").hide();
    }
    )

    $(document).ready(function () {
        $("#Other").hide();
    }
    )


    $(function () {
        $("#VacationTypeNoOther").change(function () {
        
              
             
                var OtherID = $("#VacationTypeNoOther").val();
                $("#VacationTypeNo").val(OtherID);
            
           
        });
    });

    $(function () {
        $("#VacationTypeNoMain").change(function () {

            $("#VacationTypeNo").val($("#VacationTypeNoMain").val());
            
          
            if ($("#VacationTypeNo").val() == "2") {
                $("#MedicalReport").show();
            }
            else {
                $("#MedicalReport").hide();
            }

            if ($("#VacationTypeNo").val() == "4") {
          
                $("#Other").show();
                var OtherID = $("#VacationTypeNoOther").val();
                $("#VacationTypeNo").val(OtherID);
   
            }
            else {
                $("#Other").hide();
            }
        });
    });
</script>
<script>
            function fileValidation(element) {
                var fileInput = document.getElementById(element);
                var filePath = fileInput.value;
                var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif|\.pdf)$/i;
                if (!allowedExtensions.exec(filePath)) {
                    swal(`Error!`, '@Resources.NubiHR.UploadAllowedMedicalExtensions', `error`);
                    fileInput.value = '';
                    return false;
                } else {
                    //Image preview
                    if (fileInput.files && fileInput.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            document.getElementById('imagePreview').innerHTML = '<img src="' + e.target.result + '"/>';
                        };
                        reader.readAsDataURL(fileInput.files[0]);
                    }
                }
            }

</script>
@*<script>
    $(document).ready(function () {
        $('#datepicker').datepicker({
            uiLibrary: 'bootstrap'
        });
    });
</script>*@
@*<script>
    $('#startdate_datepicker').datepicker({
        uiLibrary: 'bootstrap'
    });
</script>*@

