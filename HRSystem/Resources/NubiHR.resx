<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="AddEmployee" xml:space="preserve">
    <value>Add Employee</value>
  </data>
  <data name="AddMoreCertificates" xml:space="preserve">
    <value>Add More Certificates</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BackTolist" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="BankBranch" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmployeeInfo" xml:space="preserve">
    <value>Employee's Information</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FunctionalNumber" xml:space="preserve">
    <value>Functional Number</value>
  </data>
  <data name="HRSystem" xml:space="preserve">
    <value>HR System</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ImageTitle" xml:space="preserve">
    <value>Image Title</value>
  </data>
  <data name="JobInfo" xml:space="preserve">
    <value>Job Information</value>
  </data>
  <data name="LastCertificate" xml:space="preserve">
    <value>Last Certificate</value>
  </data>
  <data name="LastCertificateTitle" xml:space="preserve">
    <value>Last Certificate Title</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="NationalID" xml:space="preserve">
    <value>National ID</value>
  </data>
  <data name="NationalIDTitle" xml:space="preserve">
    <value>National ID Title</value>
  </data>
  <data name="PassportNumber" xml:space="preserve">
    <value>Passport Number</value>
  </data>
  <data name="PassportTitle" xml:space="preserve">
    <value>Passport Title</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="RemoveCertificate" xml:space="preserve">
    <value>Remove Certificate</value>
  </data>
  <data name="Salary" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="TrainingCertificate" xml:space="preserve">
    <value>Training Certificate</value>
  </data>
  <data name="TrainingCertificateTitle" xml:space="preserve">
    <value>Training Certificate Title</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="BrowseFile" xml:space="preserve">
    <value>Browse a File</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="BankInfo" xml:space="preserve">
    <value>Bank Information</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="AllEmployees" xml:space="preserve">
    <value>All Employees</value>
  </data>
  <data name="EmployeeHasBeenAddedSuccesfully" xml:space="preserve">
    <value>Employee has been added succesfully</value>
  </data>
  <data name="EmployeeHasBeenAddedSuccesfully" xml:space="preserve">
    <value>Employee has been modified succesfully</value>
  </data>
  <data name="AddNewEmployee" xml:space="preserve">
    <value>Add new employee</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Mobile2" xml:space="preserve">
    <value>Additional Phone Number</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="WorkNumber" xml:space="preserve">
    <value>Work Number</value>
  </data>
  <data name="Bonus" xml:space="preserve">
    <value>Bonus</value>
  </data>
  <data name="EmployeeDetails" xml:space="preserve">
    <value>Employee Details</value>
  </data>
  <data name="EditEmployee" xml:space="preserve">
    <value>Edit Employee</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="EmployeeHasBeenModifiedSuccesfully" xml:space="preserve">
    <value>Data has been modified succesfully</value>
  </data>
  <data name="PhoneInfo" xml:space="preserve">
    <value>Phone Information</value>
  </data>
  <data name="SalaryInfo" xml:space="preserve">
    <value>Salary Information</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Employee Name</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>-- Select --</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ComparePassword" xml:space="preserve">
    <value>The password and confirmation password do not match</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>Password must be at least {6} characters long</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
</root>